@import ../vars

.mini
  @mixin media($width, $fixed-width, $max-width, $wrap)
    @media screen and (max-width: $max-width)
      @for $i from 1 through $grid-cells
        @if $i < 10
          @if $wrap == 'lrg'
            .c-#{$i}.-l-, .f-#{$i}.-l-
              width: 100% !important
          @if $wrap == 'lrg'
            .c-#{$i}-l-, .f-#{$i}-l-
              width: 100% / $grid-cells * $i !important

          @if $wrap == 'med'
            .c-#{$i}.-m-, .f-#{$i}.-m-
              width: 100% !important
          @if $wrap == 'med'
            .c-#{$i}-m-, .f-#{$i}-m-
              width: 100% / $grid-cells * $i !important
  
          @if $wrap == 'sml'
            .c-#{$i}.-s-, .f-#{$i}.-s-
              width: 100% !important
          @if $wrap == 'sml'
            .c-#{$i}-s-, .f-#{$i}-s-
              width: 100% / $grid-cells * $i !important

        @else
          @if $wrap == 'lrg'
            .c#{$i}.-l-, .f#{$i}.-l-
              width: 100% !important
          @if $wrap == 'lrg'
            .c#{$i}-l-, .f#{$i}-l-
              width: 100% / $grid-cells * $i !important

          @if $wrap == 'med'
            .c#{$i}.-m-, .f#{$i}.-m-
              width: 100% !important
          @if $wrap == 'med'
            .c#{$i}-m-, .f#{$i}-m-
              width: 100% / $grid-cells * $i !important

          @if $wrap == 'sml'
            .c#{$i}.-s-, .f#{$i}.-s-
              width: 100% !important
          @if $wrap == 'sml'
            .c#{$i}-s-, .f#{$i}-s-
              width: 100% / $grid-cells * $i !important

        @if $wrap == 'sml'
          .sml
            @if $i < 10
              .f-#{$i}
                width: calc(($fixed-width + $sml-horizontal * 2) / $grid-cells * $i)
            @else
              .f#{$i}
                width: calc(($fixed-width + $sml-horizontal * 2) / $grid-cells * $i)

        @if $wrap == 'med'
          .med
            @if $i < 10
              .f-#{$i}
                width: calc(($fixed-width + $med-horizontal * 2) / $grid-cells * $i)
            @else
              .f#{$i}
                width: calc(($fixed-width + $med-horizontal * 2) / $grid-cells * $i)

        @if $wrap == 'lrg'
          .lrg
            @if $i < 10
              .f-#{$i}
                width: calc(($fixed-width + $lrg-horizontal * 2) / $grid-cells * $i)
            @else
              .f#{$i}
                width: calc(($fixed-width + $lrg-horizontal * 2) / $grid-cells * $i)

      .container.sml
        width: calc($width - $sml-horizontal * 2)

      .container.med
        width: calc($width - $med-horizontal * 2)

      .container.lrg
        width: calc($width - $lrg-horizontal * 2)

  @mixin media-minimal($max-width, $wrap)
    .container-fluid
      @for $i from 1 through $grid-cells
        @if $i < 10
          .f-#{$i}
            width: 100vw / $grid-cells * $i !important
        @else
          .f#{$i}
            width: 100vw / $grid-cells * $i !important

    @media screen and (max-width: $max-width)
      @for $i from 1 through $grid-cells
        @if $i < 10
          .f-#{$i}
            width: 100vw / $grid-cells * $i !important
        @else
          .f#{$i}
            width: 100vw / $grid-cells * $i !important

      .container
        width: 100% !important

  @mixin media-show($max-width, $wrap)
    @media screen and (max-width: $max-width)
      @if $wrap == 0
        .show-sml, .show-med
          display: none !important

        .show-lrg
          display: block !important

      @if $wrap == 1
        .show-sml, .show-lrg
          display: none !important

        .show-med
          display: block !important

      @if $wrap == 2
        .show-med, .show-lrg
          display: none !important

        .show-sml
          display: block !important

  @for $i from 1 through $grid-cells
    @if $i < 10
      .c-#{$i}
        position: relative
        width: 100% / $grid-cells * $i
    @else
      .c#{$i}
        position: relative
        width: 100% / $grid-cells * $i

  @for $i from 0 through 19
    @if $i < 2
      .w-#{$i * 5}
        flex: none
        width: 5% * $i
    @else
      .w#{$i * 5}
        flex: none
        width: 5% * $i

  @include media($lrg-media, $lrg-media, $lrg-media-max, 'lrg')

  @include media($med-media, $med-media, $med-media-max, 'med')

  @include media($sml-media, $sml-media, $sml-media-max, 'sml')

  @include media-minimal($sml-media-max, 2)

  @include media-show($lrg-media-max, 0)

  @include media-show($med-media-max, 1)

  @include media-show($sml-media-max, 2)

  @if $sml
    .sml
      @for $i from 1 through $grid-cells
        @if $i < 10
          .c-#{$i}, .f-#{$i}
            padding: 0 $sml-horizontal
        @else
          .c#{$i}, .f#{$i}
            padding: 0 $sml-horizontal

      .ccc
        padding: 0 $sml-horizontal
    
    .container.sml, .container-fluid.sml
      padding: 0 $sml-horizontal

  @if $med
    .med
      @for $i from 1 through $grid-cells
        @if $i < 10
          .c-#{$i}, .f-#{$i}
            padding: 0 $med-horizontal
        @else
          .c#{$i}, .f#{$i}
            padding: 0 $med-horizontal

      .ccc
        padding: 0 $med-horizontal

    .container.med, .container-fluid.med
      padding: 0 $med-horizontal

  @if $lrg
    .lrg
      @for $i from 1 through $grid-cells
        @if $i < 10
          .c-#{$i}, .f-#{$i}
            padding: 0 $lrg-horizontal
        @else
          .c#{$i}, .f#{$i}
            padding: 0 $lrg-horizontal

      .ccc
        padding: 0 $lrg-horizontal

    .container.lrg, .container-fluid.lrg
      padding: 0 $lrg-horizontal

  @if $sml
    .sml
      .row
        margin-left: calc($sml-horizontal * -1)
        margin-right: calc($sml-horizontal * -1)


  @if $med
    .med
      .row
        margin-left: calc($med-horizontal * -1)
        margin-right: calc($med-horizontal * -1)

  @if $lrg
    .lrg
      .row
        margin-left: calc($lrg-horizontal * -1)
        margin-right: calc($lrg-horizontal * -1)

  .p13
    flex: none
    width: calc(100% / 3)

  .p23
    flex: none
    width: calc(100% / 3 * 2)
